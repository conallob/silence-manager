# Example ExternalSecret for use with External Secrets Operator
# This fetches secrets from AWS Secrets Manager (adjust for your secret backend)
#
# Prerequisites:
# 1. Install External Secrets Operator: https://external-secrets.io/
# 2. Create a SecretStore pointing to your secrets backend
# 3. Store your secrets in your backend with the appropriate keys
#
# Example for AWS Secrets Manager:
# aws secretsmanager create-secret --name silence-manager \
#   --secret-string '{
#     "jira-url":"https://your-domain.atlassian.net",
#     "jira-username":"your-email@example.com",
#     "jira-api-token":"your-jira-api-token",
#     "alertmanager-username":"admin",
#     "alertmanager-password":"your-password"
#   }'

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: silence-manager-secrets
  namespace: monitoring
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager  # Reference to your SecretStore
    kind: SecretStore

  target:
    name: silence-manager-secrets
    creationPolicy: Owner

  data:
    # Jira Configuration
    - secretKey: jira-url
      remoteRef:
        key: silence-manager  # Secret name in your backend
        property: jira-url

    - secretKey: jira-username
      remoteRef:
        key: silence-manager
        property: jira-username

    - secretKey: jira-api-token
      remoteRef:
        key: silence-manager
        property: jira-api-token

    # Alertmanager Authentication (optional)
    - secretKey: alertmanager-username
      remoteRef:
        key: silence-manager
        property: alertmanager-username

    - secretKey: alertmanager-password
      remoteRef:
        key: silence-manager
        property: alertmanager-password

    # Or for bearer token:
    # - secretKey: alertmanager-bearer-token
    #   remoteRef:
    #     key: silence-manager
    #     property: alertmanager-bearer-token
